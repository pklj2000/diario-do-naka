"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MainServer = void 0;
const http = require("http");
const portfinder = require("portfinder");
const events_1 = require("events");
const utils_1 = require("../utils");
class MainServer extends events_1.EventEmitter {
    constructor(opts) {
        super();
        this.opts = Object.assign({
            port: 80,
        }, opts);
    }
    async run() {
        this.port = await portfinder.getPortPromise({ port: this.opts.port });
        this.host = 'localhost' + (this.port != 80 ? ':' + this.port : '');
        http.createServer(async (req, res) => {
            let a = new Date();
            const buffers = [];
            for await (const chunk of req)
                buffers.push(chunk);
            const ret = await this.opts.tunnel.sendRequest(req, Buffer.concat(buffers));
            delete ret.headers['connection'];
            delete ret.headers['content-encoding'];
            delete ret.headers['x-powered-by'];
            delete ret.headers['accept-ranges'];
            delete ret.headers['vary'];
            delete ret.headers['etag'];
            delete ret.headers['transfer-encoding'];
            res.writeHead(ret.status, ret.headers);
            res.end(new Uint8Array((ret.isBase64) ? (0, utils_1.b64ToBuf)(ret.body) : ret.body));
        }).listen(this.port, 'localhost');
        this.emit("ready");
    }
}
exports.MainServer = MainServer;
